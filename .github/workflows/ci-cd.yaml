# .github/workflows/ci-cd.yaml
name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch: # Optional: Allows manual triggering from the Actions tab

jobs:
  build-and-request-approval:
    name: Build and Request Approval
    runs-on: ubuntu-latest
    outputs:
      build_output: ${{ steps.build-step.outputs.build_output_path }} # Output from the CALL to the build workflow
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Call Build Workflow
        uses: ./.github/workflows/build.yaml
        id: build-step
        with:
          build_target: "production" # Example build target, adjust as needed
        # No secrets needed here anymore
        # secrets:
        #   NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Request Manual Approval
        if: github.event_name == 'push'
        run: echo "::notice title=Approval Required::A new commit has been pushed to the main branch. Please review and approve the deployment job to proceed."

      - name: Wait for Approval
        if: github.event_name == 'push'
        uses: actions/github-script@v7
        id: check_approval
        timeout-minutes: 4320 # 3 days
        with:
          script: |
            const workflowRuns = await github.rest.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: context.workflow,
              branch: context.ref.split('/')[2],
              event: 'push',
              status: 'waiting',
            });
            if (workflowRuns.data.total_count > 1) {
              console.log('Another workflow run is already waiting for approval.');
              core.setFailed('Another workflow run is already waiting for approval. Please approve or cancel the existing one.');
            }
  deploy:
    name: Deploy to Pages
    needs: build-and-request-approval
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deploy-app.outputs.page_url }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Call Deploy Workflow
        uses: ./.github/workflows/deploy.yaml
        id: deploy-app
        with:
          build_output_path: ${{ needs.build-and-request-approval.outputs.build_output }}
        # secrets:
        #   DEPLOYMENT_TOKEN: ${{ secrets.DEPLOYMENT_TOKEN }}
      - name: Deployment Successful
        if: success()
        run: echo "ðŸš€ Project deployed successfully to ${{ steps.deploy-app.outputs.page_url }}"
